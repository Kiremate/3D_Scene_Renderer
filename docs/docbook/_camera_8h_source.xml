<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__camera_8h_source" xml:lang="en-US">
<title>Camera.h</title>
<indexterm><primary>source/Camera.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_math_8hpp">math.hpp</link>&quot;</emphasis>
3 <emphasis role="preprocessor">#include&#32;&lt;SFML/Window.hpp&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;glm/glm.hpp&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;glm/gtc/matrix_transform.hpp&gt;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;glm/gtc/quaternion.hpp&gt;</emphasis>
7 <emphasis role="keyword">using&#32;namespace&#32;</emphasis><link linkend="_namespaceexample">example</link>;
12 <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_transform">Transform</link>&#32;{
13 &#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">Vector3f</link>&#32;<link linkend="_struct_transform_1a93e0de362a87f0b687f1cd90a2c144ba">position</link>;&#32;
14 &#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1a2e7dc2f9ee4d58592d9982a67e43a58a">Quaternion</link>&#32;<link linkend="_struct_transform_1a273d0597bb304555eda279c0348a5045">rotation</link>;&#32;
15 &#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">Vector3f</link>&#32;<link linkend="_struct_transform_1a3393425f0ba702b4a31d978f2118fe37">scale</link>;&#32;
16 
21 &#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1ad6d98c4ddd603df3b4e23a91cf307221">Matrix44</link>&#32;<link linkend="_struct_transform_1a4fd266d630a3c64e3f2c5bfea257349b">get_transform_matrix</link>()&#32;{
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1ad6d98c4ddd603df3b4e23a91cf307221">Matrix44</link>&#32;scale_matrix&#32;=&#32;glm::scale(<link linkend="_namespaceexample_1ad6d98c4ddd603df3b4e23a91cf307221">example::Matrix44</link>(1.0f),&#32;<link linkend="_struct_transform_1a3393425f0ba702b4a31d978f2118fe37">scale</link>);
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1ad6d98c4ddd603df3b4e23a91cf307221">Matrix44</link>&#32;rotation_matrix&#32;=&#32;glm::mat4_cast(<link linkend="_struct_transform_1a273d0597bb304555eda279c0348a5045">rotation</link>);
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1ad6d98c4ddd603df3b4e23a91cf307221">Matrix44</link>&#32;translation_matrix&#32;=&#32;glm::translate(<link linkend="_namespaceexample_1ad6d98c4ddd603df3b4e23a91cf307221">example::Matrix44</link>(1.0f),&#32;<link linkend="_struct_transform_1a93e0de362a87f0b687f1cd90a2c144ba">position</link>);
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;translation_matrix&#32;*&#32;rotation_matrix&#32;*&#32;scale_matrix;
26 &#32;&#32;&#32;&#32;}
27 
28 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_transform_1afd49ac2f620e25a1c79cf342badd5f90">move</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">example::Vector3f</link>&amp;&#32;offset)&#32;{
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_transform_1a93e0de362a87f0b687f1cd90a2c144ba">position</link>&#32;+=&#32;offset;
30 &#32;&#32;&#32;&#32;}
31 
32 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_transform_1acc88c8066285bb2858dfe0be3f01c388">rotate</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespaceexample_1a2e7dc2f9ee4d58592d9982a67e43a58a">example::Quaternion</link>&amp;&#32;q)&#32;{
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_transform_1a273d0597bb304555eda279c0348a5045">rotation</link>&#32;=&#32;glm::normalize(<link linkend="_struct_transform_1a273d0597bb304555eda279c0348a5045">rotation</link>&#32;*&#32;q);
34 &#32;&#32;&#32;&#32;}
35 
36 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_transform_1af191e1a4668ab2c3f8fd0c93ad5addd0">set_rotation</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespaceexample_1a2e7dc2f9ee4d58592d9982a67e43a58a">example::Quaternion</link>&amp;&#32;q)&#32;{
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_transform_1a273d0597bb304555eda279c0348a5045">rotation</link>&#32;=&#32;q;
38 &#32;&#32;&#32;&#32;}
39 
40 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_transform_1a562d085f75c2e540aa082ddf368400ee">scale_up</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">example::Vector3f</link>&amp;&#32;factor)&#32;{
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_transform_1a3393425f0ba702b4a31d978f2118fe37">scale</link>&#32;*=&#32;factor;
42 &#32;&#32;&#32;&#32;}
43 
44 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_transform_1a03435a7d8b1b7b4a4b1288d2e47ea763">scale_down</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">example::Vector3f</link>&amp;&#32;factor)&#32;{
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_transform_1a3393425f0ba702b4a31d978f2118fe37">scale</link>&#32;/=&#32;factor;
46 &#32;&#32;&#32;&#32;}
47 
48 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_transform_1abbb8c17afe564f731a9dee013445aa32">translate_local</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">example::Vector3f</link>&amp;&#32;offset)&#32;{
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;rotation&#32;matrix&#32;from&#32;the&#32;quaternion</emphasis>
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1ad6d98c4ddd603df3b4e23a91cf307221">Matrix44</link>&#32;rotation_matrix&#32;=&#32;glm::mat4_cast(<link linkend="_struct_transform_1a273d0597bb304555eda279c0348a5045">rotation</link>);
51 
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Transform&#32;the&#32;offset&#32;vector&#32;by&#32;the&#32;rotation&#32;matrix</emphasis>
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1ad17d21cecf3b746caf2cc766788b8ba5">Vector4f</link>&#32;transformed_offset&#32;=&#32;glm::vec4(offset,&#32;0.0f)&#32;*&#32;rotation_matrix;
54 
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Add&#32;the&#32;transformed&#32;offset&#32;to&#32;the&#32;position</emphasis>
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_transform_1a93e0de362a87f0b687f1cd90a2c144ba">position</link>&#32;+=&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">example::Vector3f</link>(transformed_offset);
57 &#32;&#32;&#32;&#32;}
58 
59 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_transform_1ac1cf7d5e5c5371fbeabf4323d810665a">rotate</link>(<emphasis role="keywordtype">float</emphasis>&#32;pitch,&#32;<emphasis role="keywordtype">float</emphasis>&#32;yaw)&#32;{
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;the&#32;rotation&#32;quaternion&#32;with&#32;the&#32;new&#32;pitch&#32;and&#32;yaw&#32;angles</emphasis>
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1a2e7dc2f9ee4d58592d9982a67e43a58a">Quaternion</link>&#32;q_yaw&#32;=&#32;glm::angleAxis(glm::radians(yaw),&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">example::Vector3f</link>(0,&#32;1,&#32;0));
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1a2e7dc2f9ee4d58592d9982a67e43a58a">Quaternion</link>&#32;q_pitch&#32;=&#32;glm::angleAxis(glm::radians(pitch),&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">example::Vector3f</link>(1,&#32;0,&#32;0));
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_transform_1a273d0597bb304555eda279c0348a5045">rotation</link>&#32;=&#32;glm::normalize(<link linkend="_struct_transform_1a273d0597bb304555eda279c0348a5045">rotation</link>&#32;*&#32;q_yaw&#32;*&#32;q_pitch);
64 &#32;&#32;&#32;&#32;}
65 
66 };
67 
72 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_camera">Camera</link>&#32;{
73 
74 <emphasis role="keyword">public</emphasis>:
79 &#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1ad6d98c4ddd603df3b4e23a91cf307221">Matrix44</link>&#32;<link linkend="_class_camera_1aec17d75513bee2b0c35a9214d6e76dab">get_view_matrix</link>();
84 &#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1ad6d98c4ddd603df3b4e23a91cf307221">Matrix44</link>&#32;<link linkend="_class_camera_1a213be49c3edcf6e4cc6c35e5b33d821d">get_inverse_transform_matrix</link>();
85 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_camera_1afd37eb5098867e6c4045c37eea9b3359">handle_input</link>(sf::Window&amp;&#32;window,&#32;<emphasis role="keywordtype">float</emphasis>&#32;delta_time);
86 &#32;&#32;&#32;&#32;<link linkend="_class_camera_1ae23af4d7cab430c77d537621cdd16b3f">Camera</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
87 &#32;&#32;&#32;&#32;<link linkend="_class_camera_1af6c982012f59a07c6d765bb0f9952214">Camera</link>(<emphasis role="keywordtype">float</emphasis>&#32;fov,&#32;<emphasis role="keywordtype">float</emphasis>&#32;near_plane,&#32;<emphasis role="keywordtype">float</emphasis>&#32;far_plane,&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">Vector3f</link>&#32;position,&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">Vector3f</link>&#32;target,&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">Vector3f</link>&#32;up)
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;fov(fov),
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;near_plane(near_plane),
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;far_plane(far_plane),
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;move_speed_(5.0f),
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rotation_speed_(0.1f),
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform{},
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;view_direction(normalize(target&#32;-&#32;position)),
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;up_direction(normalize(up)),
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mouse_captured(false)
97 &#32;&#32;&#32;&#32;{
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.<link linkend="_struct_transform_1a93e0de362a87f0b687f1cd90a2c144ba">position</link>&#32;=&#32;position;
99 
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">Vector3f</link>&#32;forward&#32;=&#32;normalize(target&#32;-&#32;position);
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">Vector3f</link>&#32;right&#32;=&#32;normalize(cross(up,&#32;forward));
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">Vector3f</link>&#32;new_up&#32;=&#32;cross(forward,&#32;right);
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1a441e3efa2ca4502d1a056880058fa3de">Matrix33</link>&#32;rotation_matrix(right,&#32;new_up,&#32;forward);
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transform.<link linkend="_struct_transform_1a273d0597bb304555eda279c0348a5045">rotation</link>&#32;=&#32;<link linkend="_namespaceexample_1a2e7dc2f9ee4d58592d9982a67e43a58a">Quaternion</link>(rotation_matrix);
105 &#32;&#32;&#32;&#32;}
106 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_camera_1af1ac9f9c442e3c36f6155ec195ee279b">move_camera</link>(<emphasis role="keywordtype">float</emphasis>&#32;x,&#32;<emphasis role="keywordtype">float</emphasis>&#32;y,&#32;<emphasis role="keywordtype">float</emphasis>&#32;z);
107 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_camera_1ae3a3e65c9bd9b7237579bf216a629d7a">update_directions</link>();
108 
109 <emphasis role="keyword">private</emphasis>:
110 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;fov;&#32;
111 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;near_plane;&#32;
112 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;far_plane;&#32;
113 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;move_speed_&#32;=&#32;5.0f;&#32;
114 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;rotation_speed_&#32;=&#32;0.1f;&#32;
115 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;current_pitch&#32;=&#32;0.0f;&#32;
116 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;current_yaw&#32;=&#32;0.0f;&#32;
117 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;look_speed&#32;=&#32;0.1f;&#32;
118 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;min_mouse_delta&#32;=&#32;0.5f;&#32;
119 &#32;&#32;&#32;&#32;<link linkend="_struct_transform">Transform</link>&#32;transform;&#32;
120 &#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">Vector3f</link>&#32;view_direction;&#32;
121 &#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">Vector3f</link>&#32;up_direction;&#32;&#32;
122 &#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1a38ad2986a85f3b298f71393ac1547911">Vector3f</link>&#32;right_direction;&#32;
123 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;mouse_captured&#32;=&#32;<emphasis role="keyword">false</emphasis>;&#32;&#32;
124 &#32;&#32;&#32;&#32;<link linkend="_namespaceexample_1a345347526bba6746609db52f42c36506">Vector2f</link>&#32;last_mouse_position;
125 };
</programlisting></section>
